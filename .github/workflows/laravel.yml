

name: Laravel

on:
  push:
    branches: 
      - main
      - dev
jobs:
  laravel-tests:

    runs-on: self-hosted

    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
          ref: ${{ github.ref_name }}
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Set Docker Image and Container Tag
      id: set-docker-tag
      run: |
        if [[ "${{ github.ref_name }}" == "dev" ]]; then
          echo "image_tag=dev-v1" >> $GITHUB_ENV
          echo "container_name=laravel-dev-container" >> $GITHUB_ENV
        elif [[ "${{ github.ref_name }}" == "main" ]]; then
          echo "image_tag=main-v1" >> $GITHUB_ENV
          echo "container_name=laravel-main-container" >> $GITHUB_ENV
        elif [[ "${{github.ref_name }}" == "prod" ]]; then
          echo "image_tag=prod-v1" >> $GITHUB_ENV
          echo "container_name=laravel-prod-container" >> $GITHUB_ENV 
        fi

    - name: Log Docker Tag
      run: |
        echo "Docker Image Tag: ${{ env.image_tag }}"
        echo "Container Name: ${{ env.container_name }}"

    - name: Build the Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}\/laravel:${{ env.image_tag }} Laravel/.

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }}
      
    - name: Pull Docker Image
      run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }}
    - name: Check if container exists      
      id: check-container
      run: |
          #CONTAINER_NAME="laravel_app
          if [ "$(docker ps -aq -f name=${{ env.container_name }})" ]; then
            echo "Container exists ${{ env.container_name }}"
            echo "container_found=true" >> $GITHUB_ENV
          else
            echo "Container does not exist"
            echo "container_found=false" >> $GITHUB_ENV
          fi

    - name: Stop and remove the container (if found)
      if: env.container_found == 'true'
      run: |
          #CONTAINER_NAME="laravel_app"
          echo "Stopping and removing existing container..."
          docker stop ${{ env.container_name }} || true
          docker rm ${{ env.container_name }} || true
    - name: Set Deployment Command
      id: deployment-command
      run: |
        if [[ "${{ github.ref_name }}" == "dev" ]]; then
          echo "deploy_command=docker run -d -e APP_NAME=Laravel -e APP_ENV=dev -e APP_KEY=base64:kq8LEn6X8CR+nNLh9aIhp4mnYyYlS+zROS813S8s52U= -e APP_DEBUG=true -e APP_URL=http://localhost:8000 -e LOG_CHANNEL=stack -e DB_CONNECTION=mysql -e DB_HOST=192.168.29.154 -e DB_PORT=3306 -e DB_DATABASE=laravel -e DB_USERNAME=laravel -e DB_PASSWORD=0000 -p 8000:8000 --name ${{ env.container_name }} sewani/laravel:${{ env.image_tag }} >> $GITHUB_ENV

    - name: Deploy Application
      run: |
        echo "Running deployment command: $deploy_command"
        $deploy_command
      #run: sudo docker run -d -e APP_NAME=Laravel -e APP_ENV=local -e APP_KEY=base64:kq8LEn6X8CR+nNLh9aIhp4mnYyYlS+zROS813S8s52U= -e APP_DEBUG=true -e APP_URL=http://localhost:9000 -e LOG_CHANNEL=stack -e DB_CONNECTION=mysql -e DB_HOST=192.168.29.149 -e DB_PORT=3306 -e DB_DATABASE=timetable -e DB_USERNAME=anuj -e DB_PASSWORD=0000 -p 9000:9000 --name laravel_app sewani/laravel:v1
