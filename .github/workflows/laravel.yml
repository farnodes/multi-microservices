name: Laravel

on:
  push:
    branches:
      - dev
jobs:
  laravel-tests:
    runs-on: self-hosted

    steps:
    - name: Fix permissions before checkout
      run: sudo chown -R anuj:anuj $GITHUB_WORKSPACE && sudo chmod -R u+rwx $GITHUB_WORKSPACE || true

    - name: Checkout code
      uses: actions/checkout@v4
      with:
         clean: true
    - name: Setup php
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Install Composer Dependencies
      run: cd Laravel && sudo composer update
    
    - name: Running Unit and Functional Tests
      env:
        APP_KEY: ${{ secrets.APP_KEY }} 
        DB_CONNECTION: mysql
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }} 
        DB_USERNAME: ${{ secrets.DB_USERNAME }} 
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: cd Laravel && php ./vendor/bin/phpunit
      
    - name: Set Docker Image and Container Tag
      id: set-docker-tag
      run: |
          echo "image_tag=dev-v2" >> $GITHUB_ENV
          echo "container_name=laravel-dev-container" >> $GITHUB_ENV

    - name: Log Docker Tag
      run: |
        echo "Docker Image Tag: ${{ env.image_tag }}"
        echo "Container Name: ${{ env.container_name }}"

    - name: Build the Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }} Laravel/.

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }}

    - name: Pull Docker Image
      run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }}

    - name: Check if container exists      
      id: check-container
      run: |
        if [[ "$(docker ps -aq -f name=${{ env.container_name }})" ]]; then
          echo "Container exists ${{ env.container_name }}"
          echo "container_found=true" >> $GITHUB_ENV
        else
          echo "Container does not exist"
          echo "container_found=false" >> $GITHUB_ENV
        fi

    - name: Stop and remove the container (if found)
      if: env.container_found == 'true'
      run: |
        echo "Stopping and removing existing container..."
        docker stop ${{ env.container_name }} || true
        docker rm ${{ env.container_name }} || true

    - name: Migrating database
      env: 
        DB_CONNECTION: mysql
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }} 
        DB_USERNAME: ${{ secrets.DB_USERNAME }} 
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: cd Laravel && php artisan migrate --seed

    - name: Deployment Command
      id: deployment-command
      run: |
         docker run -d -e APP_NAME=Laravel -e APP_ENV=dev -e APP_KEY=${{ secrets.APP_KEY }} -e APP_DEBUG=true -e APP_URL=http://localhost -e LOG_CHANNEL=stack -e DB_CONNECTION=mysql -e DB_HOST=${{ secrets.DB_HOST }} -e DB_PORT=${{ secrets.DB_PORT }} -e DB_DATABASE=${{ secrets.DB_DATABASE }} -e DB_USERNAME=${{ secrets.DB_USERNAME }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -p 8000:8000 --name ${{ env.container_name }} sewani/laravel:${{ env.image_tag }}
