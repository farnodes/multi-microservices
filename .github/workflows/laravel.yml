name: Laravel

on:
  push:
    branches:
      - prod

jobs:
  laravel-tests:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Set Docker Image and Container Tag
      id: set-docker-tag
      run: |
        echo "image_tag=prod-v1" >> $GITHUB_ENV
        echo "container_name=laravel-prod-container" >> $GITHUB_ENV
        echo "nginx_container=nginx-container">>$GITHUB_ENV

    - name: Log Docker Tag
      run: |
        echo "Docker Image Tag: ${{ env.image_tag }}"
        echo "Container Name: ${{ env.container_name }}"

    - name: Build the Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }} Laravel/.

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }}

    - name: Pull Docker Image
      run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/laravel:${{ env.image_tag }}

    - name: Check if container exists      
      id: check-container
      run: |
        if [[ "$(docker ps -aq -f name=${{ env.container_name }})" ]]; then
          echo "Container exists ${{ env.container_name }}"
          echo "container_found=true" >> $GITHUB_ENV
        else
          echo "Container does not exist"
          echo "container_found=false" >> $GITHUB_ENV
        fi

    - name: Check if container exists      
      id: nginx-check-container
      run: |
        if [[ "$(docker ps -aq -f name=${{ env.nginx_container }})" ]]; then
          echo "Container exists ${{ env.nginx_container }}"
          echo "container_found=true" >> $GITHUB_ENV
        else
          echo "Container does not exist"
          echo "container_found=false" >> $GITHUB_ENV
        fi

    - name: Stop and remove the container (if found)
      if: env.container_found == 'true'
      run: |
        echo "Stopping and removing existing container..."
        docker stop ${{ env.nginx_container }} || true
        docker rm ${{ env.nginx_container }} || true
        docker stop ${{ env.container_name }} || true
        docker rm ${{ env.container_name }} || true  
        
    - name: remove the network
      run: |
        if [[ "$(docker network ls -f name=laravel_network )" ]]; then
          echo "Removing existing network..."
          docker network rm laravel_network
        fi

      
    - name: Running Deployment Command
      id: deployment-command
      run: |
        docker network create laravel_network
        docker run -d -e APP_NAME=Laravel -e APP_ENV=production -e APP_KEY=base64:kq8LEn6X8CR+nNLh9aIhp4mnYyYlS+zROS813S8s52U= -e APP_DEBUG=false -e APP_URL=http://localhost -e LOG_CHANNEL=stack -e DB_CONNECTION=mysql -e DB_HOST=192.168.97.203 -e DB_PORT=3306 -e DB_DATABASE=laravel -e DB_USERNAME=laravel -e DB_PASSWORD=0000  --network laravel_network --name ${{ env.container_name }} sewani/laravel:${{ env.image_tag }}
        docker run -d --name nginx-container --network laravel_network -p 8080:80 -v /home/anuj/multi-microservices/Laravel/nginx.conf:/etc/nginx/conf.d/default.conf nginx:latest
      
    
